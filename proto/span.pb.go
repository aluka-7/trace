// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: span.proto

package proto

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Tag_Kind int32

const (
	Tag_STRING Tag_Kind = 0
	Tag_INT    Tag_Kind = 1
	Tag_BOOL   Tag_Kind = 2
	Tag_FLOAT  Tag_Kind = 3
)

var Tag_Kind_name = map[int32]string{
	0: "STRING",
	1: "INT",
	2: "BOOL",
	3: "FLOAT",
}

var Tag_Kind_value = map[string]int32{
	"STRING": 0,
	"INT":    1,
	"BOOL":   2,
	"FLOAT":  3,
}

func (x Tag_Kind) String() string {
	return proto.EnumName(Tag_Kind_name, int32(x))
}

func (Tag_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{0, 0}
}

// Deprecated: Kind no long use
type Log_Kind int32

const (
	Log_STRING Log_Kind = 0
	Log_INT    Log_Kind = 1
	Log_BOOL   Log_Kind = 2
	Log_FLOAT  Log_Kind = 3
)

var Log_Kind_name = map[int32]string{
	0: "STRING",
	1: "INT",
	2: "BOOL",
	3: "FLOAT",
}

var Log_Kind_value = map[string]int32{
	"STRING": 0,
	"INT":    1,
	"BOOL":   2,
	"FLOAT":  3,
}

func (x Log_Kind) String() string {
	return proto.EnumName(Log_Kind_name, int32(x))
}

func (Log_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{2, 0}
}

type SpanRef_RefType int32

const (
	SpanRef_CHILD_OF     SpanRef_RefType = 0
	SpanRef_FOLLOWS_FROM SpanRef_RefType = 1
)

var SpanRef_RefType_name = map[int32]string{
	0: "CHILD_OF",
	1: "FOLLOWS_FROM",
}

var SpanRef_RefType_value = map[string]int32{
	"CHILD_OF":     0,
	"FOLLOWS_FROM": 1,
}

func (x SpanRef_RefType) String() string {
	return proto.EnumName(SpanRef_RefType_name, int32(x))
}

func (SpanRef_RefType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{3, 0}
}

type Tag struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Kind                 Tag_Kind `protobuf:"varint,2,opt,name=kind,proto3,enum=fos.framework.trace.Tag_Kind" json:"kind,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{0}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Tag) GetKind() Tag_Kind {
	if m != nil {
		return m.Kind
	}
	return Tag_STRING
}

func (m *Tag) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Field struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{1}
}
func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (m *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(m, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Field) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Log struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Deprecated: Kind no long use
	Kind Log_Kind `protobuf:"varint,2,opt,name=kind,proto3,enum=fos.framework.trace.Log_Kind" json:"kind,omitempty"`
	// Deprecated: Value no long use
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Fields               []*Field `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{2}
}
func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Log) GetKind() Log_Kind {
	if m != nil {
		return m.Kind
	}
	return Log_STRING
}

func (m *Log) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Log) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Log) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

// SpanRef describes causal relationship of the current span to another span (e.g. 'child-of')
type SpanRef struct {
	RefType              SpanRef_RefType `protobuf:"varint,1,opt,name=ref_type,json=refType,proto3,enum=fos.framework.trace.SpanRef_RefType" json:"ref_type,omitempty"`
	TraceId              uint64          `protobuf:"varint,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId               uint64          `protobuf:"varint,3,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SpanRef) Reset()         { *m = SpanRef{} }
func (m *SpanRef) String() string { return proto.CompactTextString(m) }
func (*SpanRef) ProtoMessage()    {}
func (*SpanRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{3}
}
func (m *SpanRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpanRef.Unmarshal(m, b)
}
func (m *SpanRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpanRef.Marshal(b, m, deterministic)
}
func (m *SpanRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpanRef.Merge(m, src)
}
func (m *SpanRef) XXX_Size() int {
	return xxx_messageInfo_SpanRef.Size(m)
}
func (m *SpanRef) XXX_DiscardUnknown() {
	xxx_messageInfo_SpanRef.DiscardUnknown(m)
}

var xxx_messageInfo_SpanRef proto.InternalMessageInfo

func (m *SpanRef) GetRefType() SpanRef_RefType {
	if m != nil {
		return m.RefType
	}
	return SpanRef_CHILD_OF
}

func (m *SpanRef) GetTraceId() uint64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *SpanRef) GetSpanId() uint64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

// Span represents a named unit of work performed by a service.
type Span struct {
	Version       int32  `protobuf:"varint,99,opt,name=version,proto3" json:"version,omitempty"`
	ServiceName   string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	OperationName string `protobuf:"bytes,2,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	// Deprecated: caller no long required
	Caller   string `protobuf:"bytes,3,opt,name=caller,proto3" json:"caller,omitempty"`
	TraceId  uint64 `protobuf:"varint,4,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	SpanId   uint64 `protobuf:"varint,5,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	ParentId uint64 `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Deprecated: level no long required
	Level int32 `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	// Deprecated: use start_time instead instead of start_at
	StartAt int64 `protobuf:"varint,8,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	// Deprecated: use duration instead instead of finish_at
	FinishAt             int64                `protobuf:"varint,9,opt,name=finish_at,json=finishAt,proto3" json:"finish_at,omitempty"`
	SamplingProbability  float32              `protobuf:"fixed32,10,opt,name=sampling_probability,json=samplingProbability,proto3" json:"sampling_probability,omitempty"`
	Env                  string               `protobuf:"bytes,19,opt,name=env,proto3" json:"env,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,20,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Duration             *duration.Duration   `protobuf:"bytes,21,opt,name=duration,proto3" json:"duration,omitempty"`
	References           []*SpanRef           `protobuf:"bytes,22,rep,name=references,proto3" json:"references,omitempty"`
	Tags                 []*Tag               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	Logs                 []*Log               `protobuf:"bytes,12,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Span) Reset()         { *m = Span{} }
func (m *Span) String() string { return proto.CompactTextString(m) }
func (*Span) ProtoMessage()    {}
func (*Span) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{4}
}
func (m *Span) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Span.Unmarshal(m, b)
}
func (m *Span) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Span.Marshal(b, m, deterministic)
}
func (m *Span) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Span.Merge(m, src)
}
func (m *Span) XXX_Size() int {
	return xxx_messageInfo_Span.Size(m)
}
func (m *Span) XXX_DiscardUnknown() {
	xxx_messageInfo_Span.DiscardUnknown(m)
}

var xxx_messageInfo_Span proto.InternalMessageInfo

func (m *Span) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Span) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Span) GetOperationName() string {
	if m != nil {
		return m.OperationName
	}
	return ""
}

func (m *Span) GetCaller() string {
	if m != nil {
		return m.Caller
	}
	return ""
}

func (m *Span) GetTraceId() uint64 {
	if m != nil {
		return m.TraceId
	}
	return 0
}

func (m *Span) GetSpanId() uint64 {
	if m != nil {
		return m.SpanId
	}
	return 0
}

func (m *Span) GetParentId() uint64 {
	if m != nil {
		return m.ParentId
	}
	return 0
}

func (m *Span) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Span) GetStartAt() int64 {
	if m != nil {
		return m.StartAt
	}
	return 0
}

func (m *Span) GetFinishAt() int64 {
	if m != nil {
		return m.FinishAt
	}
	return 0
}

func (m *Span) GetSamplingProbability() float32 {
	if m != nil {
		return m.SamplingProbability
	}
	return 0
}

func (m *Span) GetEnv() string {
	if m != nil {
		return m.Env
	}
	return ""
}

func (m *Span) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Span) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Span) GetReferences() []*SpanRef {
	if m != nil {
		return m.References
	}
	return nil
}

func (m *Span) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Span) GetLogs() []*Log {
	if m != nil {
		return m.Logs
	}
	return nil
}

func init() {
	proto.RegisterEnum("fos.framework.trace.Tag_Kind", Tag_Kind_name, Tag_Kind_value)
	proto.RegisterEnum("fos.framework.trace.Log_Kind", Log_Kind_name, Log_Kind_value)
	proto.RegisterEnum("fos.framework.trace.SpanRef_RefType", SpanRef_RefType_name, SpanRef_RefType_value)
	proto.RegisterType((*Tag)(nil), "fos.framework.trace.Tag")
	proto.RegisterType((*Field)(nil), "fos.framework.trace.Field")
	proto.RegisterType((*Log)(nil), "fos.framework.trace.Log")
	proto.RegisterType((*SpanRef)(nil), "fos.framework.trace.SpanRef")
	proto.RegisterType((*Span)(nil), "fos.framework.trace.Span")
}

func init() { proto.RegisterFile("span.proto", fileDescriptor_fc5f2b88b579999f) }

var fileDescriptor_fc5f2b88b579999f = []byte{
	// 669 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xd1, 0x6e, 0xd3, 0x3e,
	0x14, 0xc6, 0x97, 0x26, 0x6d, 0xd2, 0xb3, 0xfe, 0xa7, 0xc8, 0xdb, 0x7f, 0x78, 0x63, 0x40, 0xa8,
	0x40, 0x2a, 0x12, 0xca, 0x58, 0x11, 0x17, 0x48, 0x48, 0x68, 0x63, 0x2a, 0x54, 0x84, 0x15, 0x79,
	0x95, 0x90, 0xb8, 0xa9, 0xbc, 0xf6, 0x24, 0x44, 0x4b, 0x93, 0xc8, 0xf1, 0x8a, 0xfa, 0x1a, 0xbc,
	0x05, 0xef, 0xc5, 0x13, 0xf0, 0x04, 0xc8, 0x4e, 0xda, 0x0d, 0xe8, 0x86, 0xb4, 0xab, 0xe6, 0x9c,
	0xf3, 0xb3, 0x3f, 0x7f, 0xee, 0x97, 0x00, 0x14, 0x39, 0x4f, 0xfd, 0x5c, 0x64, 0x32, 0x23, 0x9b,
	0x61, 0x56, 0xf8, 0xa1, 0xe0, 0x53, 0xfc, 0x9a, 0x89, 0x73, 0x5f, 0x0a, 0x3e, 0xc6, 0xdd, 0x07,
	0x51, 0x96, 0x45, 0x09, 0xee, 0x6b, 0xe4, 0xec, 0x22, 0xdc, 0x97, 0xf1, 0x14, 0x0b, 0xc9, 0xa7,
	0x79, 0xb9, 0x6a, 0xf7, 0xfe, 0x9f, 0xc0, 0xe4, 0x42, 0x70, 0x19, 0x67, 0xd5, 0xae, 0xed, 0x6f,
	0x06, 0x98, 0x43, 0x1e, 0x11, 0x17, 0xcc, 0x73, 0x9c, 0x53, 0xc3, 0x33, 0x3a, 0x4d, 0xa6, 0x1e,
	0xc9, 0x01, 0x58, 0xe7, 0x71, 0x3a, 0xa1, 0x35, 0xcf, 0xe8, 0x6c, 0x74, 0xef, 0xf9, 0x2b, 0xe4,
	0xfd, 0x21, 0x8f, 0xfc, 0xf7, 0x71, 0x3a, 0x61, 0x1a, 0x25, 0x5b, 0x50, 0x9f, 0xf1, 0xe4, 0x02,
	0xa9, 0xe9, 0x19, 0x9d, 0x16, 0x2b, 0x8b, 0xf6, 0x33, 0xb0, 0x14, 0x43, 0x00, 0x1a, 0xa7, 0x43,
	0xd6, 0x3f, 0x79, 0xeb, 0xae, 0x11, 0x1b, 0xcc, 0xfe, 0xc9, 0xd0, 0x35, 0x88, 0x03, 0xd6, 0xd1,
	0x60, 0x10, 0xb8, 0x35, 0xd2, 0x84, 0x7a, 0x2f, 0x18, 0x1c, 0x0e, 0x5d, 0xb3, 0xbd, 0x0f, 0xf5,
	0x5e, 0x8c, 0xc9, 0x64, 0xc5, 0xa9, 0x96, 0x12, 0xb5, 0xab, 0x12, 0x3f, 0x0c, 0x30, 0x83, 0xec,
	0xb6, 0x2e, 0x82, 0xec, 0xdf, 0x2e, 0xc8, 0x1e, 0x34, 0x97, 0x77, 0x4b, 0x2d, 0xcf, 0xe8, 0x98,
	0xec, 0xb2, 0x41, 0xba, 0xd0, 0x08, 0xd5, 0x89, 0x0b, 0x5a, 0xf7, 0xcc, 0xce, 0x7a, 0x77, 0x77,
	0xa5, 0x90, 0x36, 0xc5, 0x2a, 0xf2, 0x16, 0xf7, 0xf2, 0xdd, 0x00, 0xfb, 0x34, 0xe7, 0x29, 0xc3,
	0x90, 0xbc, 0x06, 0x47, 0x60, 0x38, 0x92, 0xf3, 0x1c, 0xb5, 0xdf, 0x8d, 0xee, 0xa3, 0x95, 0x9a,
	0x15, 0xef, 0x33, 0x0c, 0x87, 0xf3, 0x1c, 0x99, 0x2d, 0xca, 0x07, 0xb2, 0x03, 0x8e, 0x26, 0x46,
	0x71, 0x79, 0x3b, 0x16, 0xb3, 0x75, 0xdd, 0x9f, 0x90, 0x3b, 0x60, 0xab, 0xe0, 0xa9, 0x89, 0xa9,
	0x27, 0x0d, 0x55, 0xf6, 0x27, 0xed, 0x27, 0x60, 0x57, 0xfb, 0x90, 0x16, 0x38, 0x6f, 0xde, 0xf5,
	0x83, 0xe3, 0xd1, 0xa0, 0xe7, 0xae, 0x11, 0x17, 0x5a, 0xbd, 0x41, 0x10, 0x0c, 0x3e, 0x9d, 0x8e,
	0x7a, 0x6c, 0xf0, 0xc1, 0x35, 0xda, 0x3f, 0x2d, 0xb0, 0x94, 0x36, 0xa1, 0x60, 0xcf, 0x50, 0x14,
	0x71, 0x96, 0xd2, 0xb1, 0x67, 0x74, 0xea, 0x6c, 0x51, 0x92, 0x87, 0xd0, 0x2a, 0x50, 0xcc, 0xe2,
	0x31, 0x8e, 0x52, 0x3e, 0xc5, 0xea, 0x6f, 0x5b, 0xaf, 0x7a, 0x27, 0x7c, 0x8a, 0xe4, 0x31, 0x6c,
	0x64, 0x39, 0x96, 0x89, 0x2d, 0xa1, 0x9a, 0x86, 0xfe, 0x5b, 0x76, 0x35, 0xb6, 0x0d, 0x8d, 0x31,
	0x4f, 0x12, 0x14, 0xfa, 0xbc, 0x4d, 0x56, 0x55, 0xbf, 0x79, 0xb4, 0xae, 0xf5, 0x58, 0xbf, 0xea,
	0x91, 0xdc, 0x85, 0x66, 0xce, 0x05, 0xa6, 0x52, 0x8d, 0x1a, 0x7a, 0xe4, 0x94, 0x8d, 0xbe, 0xce,
	0x46, 0x82, 0x33, 0x4c, 0xa8, 0xad, 0xad, 0x94, 0x85, 0x92, 0x29, 0x24, 0x17, 0x72, 0xc4, 0x25,
	0x75, 0x74, 0x34, 0x6c, 0x5d, 0x1f, 0x4a, 0xb5, 0x5b, 0x18, 0xa7, 0x71, 0xf1, 0x45, 0xcd, 0x9a,
	0x7a, 0xe6, 0x94, 0x8d, 0x43, 0x49, 0x0e, 0x60, 0xab, 0xe0, 0xd3, 0x3c, 0x89, 0xd3, 0x68, 0x94,
	0x8b, 0xec, 0x8c, 0x9f, 0xc5, 0x49, 0x2c, 0xe7, 0x14, 0x3c, 0xa3, 0x53, 0x63, 0x9b, 0x8b, 0xd9,
	0xc7, 0xcb, 0x91, 0x4a, 0x38, 0xa6, 0x33, 0xba, 0x59, 0x26, 0x1c, 0xd3, 0x19, 0x79, 0x09, 0x50,
	0x8a, 0xab, 0x34, 0xd2, 0x2d, 0xcf, 0xd0, 0xf1, 0x2b, 0x5f, 0x7b, 0x7f, 0xf1, 0xda, 0xfb, 0xc3,
	0x45, 0x54, 0x59, 0x53, 0xd3, 0xaa, 0x26, 0x2f, 0xc0, 0x59, 0x7c, 0x0e, 0xe8, 0xff, 0x7a, 0xe1,
	0xce, 0x5f, 0x0b, 0x8f, 0x2b, 0x80, 0x2d, 0x51, 0xf2, 0x0a, 0x40, 0x60, 0x88, 0x02, 0xd3, 0x31,
	0x16, 0x74, 0x5b, 0x07, 0x7e, 0xef, 0xa6, 0xf0, 0xb1, 0x2b, 0x3c, 0x79, 0x0a, 0x96, 0xe4, 0x51,
	0x41, 0xd7, 0xf5, 0x3a, 0x7a, 0xdd, 0x77, 0x85, 0x69, 0x4a, 0xd1, 0x49, 0x16, 0x15, 0xb4, 0x75,
	0x03, 0x1d, 0x64, 0x11, 0xd3, 0xd4, 0x91, 0xfd, 0xb9, 0x5e, 0x1e, 0xbc, 0xa1, 0x7f, 0x9e, 0xff,
	0x0a, 0x00, 0x00, 0xff, 0xff, 0xef, 0x8a, 0xf8, 0xd3, 0x41, 0x05, 0x00, 0x00,
}
